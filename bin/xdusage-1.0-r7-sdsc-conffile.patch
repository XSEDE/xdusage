diff -urNd xdusage-1.0-r7/bin/xdusage xdusage-1.0-r7-sdsc/bin/xdusage
--- xdusage-1.0-r7/bin/xdusage	1969-12-31 16:00:00.000000000 -0800
+++ xdusage-1.0-r7-sdsc/bin/xdusage	2013-05-17 14:53:09.939866760 -0700
@@ -0,0 +1,9 @@
+#!/bin/bash
+pushd `dirname $0` &>/dev/null
+XDUSAGE_INSTALL_DIR=`pwd`
+popd &>/dev/null
+
+RUNAS='xdusage'
+#echo $XDUSAGE_INSTALL_DIR 
+RUNCMD="${XDUSAGE_INSTALL_DIR}/xdusage.pl"
+/usr/bin/sudo -u ${RUNAS} USER=${USER} XDUSAGE_INSTALL_DIR=${XDUSAGE_INSTALL_DIR} ${RUNCMD} $*
diff -urNd xdusage-1.0-r7/bin/xdusage.pl xdusage-1.0-r7-sdsc/bin/xdusage.pl
--- xdusage-1.0-r7/bin/xdusage.pl	2013-04-17 10:03:11.000000000 -0700
+++ xdusage-1.0-r7-sdsc/bin/xdusage.pl	2013-05-17 14:52:26.867866886 -0700
@@ -6,11 +6,85 @@
 
 Getopt::Long::Configure ("no_ignore_case");
 
-my $PASSWORD="xdusage";  #change to correct password
-			# as obtained from XDCDB admins
+# find out where this script is running from
+# eliminate the need to configure an install dir
+my($install_dir) = $ENV{XDUSAGE_INSTALL_DIR};
+die "env XDUSAGE_INSTALL_DIR not set" unless($install_dir);
+
+# load the various settings from a configuration file
+# (db_password, resource_name, admin_name)
+# file is simple key=value, ignore lines that start with #
+
+my($PASSWORD);
+my($resource);
+my(@admin_names);
+my($conf_file);
+
+# list of possible config file locations
+my(@conf_file_list) = ('/etc/xdusage.conf', 
+	      '/var/secrets/xdusage.conf', 
+	      "$install_dir/xdusage.conf",
+	      ) ;
+
+# use the first one found.
+foreach my $c (@conf_file_list)
+{
+    if (-r $c)
+    {
+        $conf_file = $c;
+        last;
+    }
+}
+
+die "Unable to find xdusage.conf in:\n  " . join("\n  ", @conf_file_list) . 
+    "\n" unless ($conf_file);
+
+# read in config file
+open FD, "<$conf_file" or die "$!: $conf_file";
+while(<FD>)
+{
+    chomp;
+    next if ( /^\s*#/ );
+    next if ( /^\s*$/ );
+    if( ! /^([^=]+)=([^=]+)$/ )
+    {
+        print stderr "Ignoring cruft in $conf_file: '$_'\n";
+	next;
+    }
+    my $key = $1;
+    my $val = $2;
+    $key =~ s/^\s*//g;
+    $key =~ s/\s*$//g;
+    $val =~ s/^\s*//g;
+    $val =~ s/\s*$//g;
+
+    if ($key eq 'db_password')
+    {
+        die "Multiple 'db_password' values in $conf_file" if ($PASSWORD);
+	$PASSWORD = $val;
+    }
+    elsif ($key eq 'resource_name')
+    {
+        die "Multiple 'resource_name' values in $conf_file" if ($resource);
+	$resource = $val;
+    }
+    elsif ($key eq 'admin_name')
+    {
+        unshift(@admin_names,$val);
+    }
+    else
+    {
+        print stderr "Ignoring cruft in $conf_file: '$_'\n";
+    }
+}
+close FD or die "$!: $conf_file";
+
+# stop here if missing required values
+die "Unable to find 'db_password' value in $conf_file" unless ($PASSWORD);
+die "Unable to find 'resource_name' value in $conf_file" unless ($resource);
+
 my($me) = (split /\//, $0)[-1];
-my($logname)     = $ENV{SUDO_USER}           || die "SUDO_USER not set\n";
-my($install_dir) = $ENV{XDUSAGE_INSTALL_DIR} || die "XDUSAGE_INSTALL_DIR not set\n";
+my($logname) = $ENV{SUDO_USER} || die "SUDO_USER not set\n";
 
 my(%options) = ();
 usage() unless 
@@ -41,7 +115,6 @@
 my($DEBUG) = option_flag('debug');
 my($today) = UnixDate(ParseDate('today'),  "%Y-%m-%d");
 
-my($resource) = get_resource();
 my($is_admin) = is_admin($logname);
 my($xuser) = ($is_admin && $ENV{USER}) ? $ENV{USER} : $logname;
 
@@ -87,37 +160,15 @@
     $dbh->disconnect();
 }
 
-sub get_resource()
-{
-    my($file) =  "$install_dir/resource_name";
-    my($name);
-
-    die "${me}: $file - $!\n" unless open FD, $file;
-    while (<FD>)
-    {
-        chomp;
-        $name = $_;
-    }
-    close FD;
-    $name;
-}
-
 sub is_admin()
 {
     my($user) = shift;
-    my($file) =  "$install_dir/xdusage.admins";
-    my($name);
     my($is_admin) = 0;
 
-    return 0 unless (-r $file);
-    die "${me}: $file - $!\n" unless open FD, $file;
-    while (<FD>)
+    foreach (@admin_names)
     {
-        chomp;
-        $name = $_;
-	$is_admin = 1 if ($user eq $name);
+	$is_admin = 1 if ($user eq $_);
     }
-    close FD;
     $is_admin;
 }
 
